<!DOCTYPE html>
<html>
<head>
    <title>Render</title>
    <%= include_gon %>
    <script type="text/javascript" src="vivagraph.min.js"></script>
    <script type="text/javascript">
        console.log(gon.plansarray)
        function main () {
            // This demo shows how to create an SVG node which is a bit more complex
            // than single image. Do accomplish this we use 'g' element and
            // compose group of elements to represent a node.
            var graph = Viva.Graph.graph();

            var graphics = Viva.Graph.View.svgGraphics(),
                nodeSize = 24;


        for (var i=0; i<gon.plansarray.length; i++) {
		graph.addNode(gon.plansarray[i]["region"], {"name":gon.plansarray[i]["name"], "description":gon.plansarray[i]["description"]});
		graph.addLink("vcaplans.vmware.com", gon.plansarray[i]["region"]);    
        }; // end FOR 

		for (var i=0; i<gon.usersarray.length; i++) {
		graph.addNode(gon.usersarray[i]["email"], {"id":gon.usersarray[i]["id"]});
		graph.addLink("vcauser.vmware.com", gon.usersarray[i]["email"]);    
        }; // end FOR 


		for (var i=0; i<gon.instancesarray.length; i++) {
		graph.addNode(gon.instancesarray[i]["id"], {"name":gon.instancesarray[i]["name"]});
		graph.addLink("vcainstances.vmware.com", gon.instancesarray[i]["id"]);    
        }; // end FOR 



       //     graph.addNode(gon.plansarray_raw.map(function(el) { return el['name']; }), '91bad8ceeec43ae303790f8fe238164b');
            graph.addNode('indexzero', 'd43e8ea63b61e7669ded5b9d3c2e980f');
            graph.addLink('anvaka', 'indexzero');
            //console.log(gon.plansarray)
            //console.log(gon.usersarray)
            //console.log(gon.instancesarray)
            
            //console.log(gon.plansarray.map(function(el) { return el['name']; }))

            graphics.node(function(node) {
              // This time it's a group of elements: http://www.w3.org/TR/SVG/struct.html#Groups
              var ui = Viva.Graph.svg('g'),
                  // Create SVG text element with user id as content
                  svgText = Viva.Graph.svg('text').attr('y', '-4px').text(node.id),
                  img = Viva.Graph.svg('image')
                     .attr('width', nodeSize)
                     .attr('height', nodeSize)
                     .link('https://secure.gravatar.com/avatar/' + node.data);

              ui.append(svgText);
              ui.append(img);
              return ui;
            }).placeNode(function(nodeUI, pos) {
                // 'g' element doesn't have convenient (x,y) attributes, instead
                // we have to deal with transforms: http://www.w3.org/TR/SVG/coords.html#SVGGlobalTransformAttribute
                nodeUI.attr('transform',
                            'translate(' +
                                  (pos.x - nodeSize/2) + ',' + (pos.y - nodeSize/2) +
                            ')');
            });

            // Render the graph
            var renderer = Viva.Graph.View.renderer(graph, {
                    graphics : graphics
                });
            renderer.run();
        }
    </script>

    <style type="text/css" media="screen">
        html, body, svg { width: 100%; height: 100%;}
    </style>
</head>
<body onload='main()'>
</body>
</html>
